@model MVC.Models.WorkLogCreateViewModel
@{
    ViewData["Title"] = "Yeni Çalışma Kaydı";
}

<div class="container-fluid">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">
                        <i class="fas fa-plus me-2"></i>
                        Yeni Çalışma Kaydı Oluştur
                    </h3>
                </div>

                <form asp-action="Create" method="post" class="needs-validation" novalidate>
                    <div class="card-body">
                        <div class="row">
                            <!-- Personel Selection -->
                            <div class="col-md-6 mb-3">
                                <label asp-for="PersonId" class="form-label required">
                                    <i class="fas fa-user me-1"></i>@Html.DisplayNameFor(model => model.PersonId)
                                </label>
                                <select asp-for="PersonId" class="form-select" asp-items="Model.PersonSelectList" required>
                                    <option value="">-- Personel Seçiniz --</option>
                                </select>
                                <span asp-validation-for="PersonId" class="text-danger"></span>
                            </div>

                            <!-- Date -->
                            <div class="col-md-6 mb-3">
                                <label asp-for="Date" class="form-label required">
                                    <i class="fas fa-calendar me-1"></i>@Html.DisplayNameFor(model => model.Date)
                                </label>
                                <input asp-for="Date" type="date" class="form-control" required />
                                <span asp-validation-for="Date" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="row">
                            <!-- Start Time -->
                            <div class="col-md-6 mb-3">
                                <label asp-for="StartTime" class="form-label required">
                                    <i class="fas fa-clock me-1"></i>@Html.DisplayNameFor(model => model.StartTime)
                                </label>
                                <input asp-for="StartTime" type="time" class="form-control" required />
                                <span asp-validation-for="StartTime" class="text-danger"></span>
                            </div>

                            <!-- End Time -->
                            <div class="col-md-6 mb-3">
                                <label asp-for="EndTime" class="form-label">
                                    <i class="fas fa-clock me-1"></i>@Html.DisplayNameFor(model => model.EndTime)
                                </label>
                                <input asp-for="EndTime" type="time" class="form-control" />
                                <span asp-validation-for="EndTime" class="text-danger"></span>
                                <div class="form-text">Çıkış saati daha sonra da eklenebilir</div>
                            </div>
                        </div>

                        <!-- Break Times Section -->
                        <div class="card mb-3">
                            <div class="card-header bg-light">
                                <h6 class="mb-0">
                                    <i class="fas fa-coffee me-1"></i>
                                    Mola Bilgileri
                                </h6>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-4 mb-3">
                                        <label asp-for="BreakStartTime" class="form-label">
                                            <i class="fas fa-pause me-1"></i>@Html.DisplayNameFor(model => model.BreakStartTime)
                                        </label>
                                        <input asp-for="BreakStartTime" type="time" class="form-control" />
                                        <span asp-validation-for="BreakStartTime" class="text-danger"></span>
                                    </div>

                                    <div class="col-md-4 mb-3">
                                        <label asp-for="BreakEndTime" class="form-label">
                                            <i class="fas fa-play me-1"></i>@Html.DisplayNameFor(model => model.BreakEndTime)
                                        </label>
                                        <input asp-for="BreakEndTime" type="time" class="form-control" />
                                        <span asp-validation-for="BreakEndTime" class="text-danger"></span>
                                    </div>

                                    <div class="col-md-4 mb-3">
                                        <label asp-for="BreakDurationMinutes" class="form-label">
                                            <i class="fas fa-stopwatch me-1"></i>@Html.DisplayNameFor(model => model.BreakDurationMinutes)
                                        </label>
                                        <div class="input-group">
                                            <input asp-for="BreakDurationMinutes" type="number" class="form-control" min="0" max="480" />
                                            <span class="input-group-text">dakika</span>
                                        </div>
                                        <span asp-validation-for="BreakDurationMinutes" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <!-- Work Type -->
                            <div class="col-md-6 mb-3">
                                <label asp-for="WorkType" class="form-label required">
                                    <i class="fas fa-briefcase me-1"></i>@Html.DisplayNameFor(model => model.WorkType)
                                </label>
                                <select asp-for="WorkType" class="form-select" asp-items="Model.WorkTypeSelectList" required>
                                    <option value="">-- Çalışma Türü Seçiniz --</option>
                                </select>
                                <span asp-validation-for="WorkType" class="text-danger"></span>
                            </div>

                            <!-- Location -->
                            <div class="col-md-6 mb-3">
                                <label asp-for="Location" class="form-label">
                                    <i class="fas fa-map-marker-alt me-1"></i>@Html.DisplayNameFor(model => model.Location)
                                </label>
                                <input asp-for="Location" class="form-control" placeholder="Çalışma lokasyonu (opsiyonel)" />
                                <span asp-validation-for="Location" class="text-danger"></span>
                            </div>
                        </div>

                        <!-- Checkboxes -->
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <div class="form-check">
                                    <input asp-for="IsWeekend" class="form-check-input" type="checkbox" />
                                    <label asp-for="IsWeekend" class="form-check-label">
                                        <i class="fas fa-calendar-weekend me-1"></i>@Html.DisplayNameFor(model => model.IsWeekend)
                                    </label>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-check">
                                    <input asp-for="IsHoliday" class="form-check-input" type="checkbox" />
                                    <label asp-for="IsHoliday" class="form-check-label">
                                        <i class="fas fa-star me-1"></i>@Html.DisplayNameFor(model => model.IsHoliday)
                                    </label>
                                </div>
                            </div>
                        </div>

                        <!-- Tasks Completed -->
                        <div class="mb-3">
                            <label asp-for="TasksCompleted" class="form-label">
                                <i class="fas fa-tasks me-1"></i>@Html.DisplayNameFor(model => model.TasksCompleted)
                            </label>
                            <textarea asp-for="TasksCompleted" class="form-control" rows="3" placeholder="Tamamlanan görevleri buraya yazabilirsiniz..."></textarea>
                            <span asp-validation-for="TasksCompleted" class="text-danger"></span>
                        </div>

                        <!-- Notes -->
                        <div class="mb-3">
                            <label asp-for="Notes" class="form-label">
                                <i class="fas fa-sticky-note me-1"></i>@Html.DisplayNameFor(model => model.Notes)
                            </label>
                            <textarea asp-for="Notes" class="form-control" rows="3" placeholder="Ek notlar ve açıklamalar..."></textarea>
                            <span asp-validation-for="Notes" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="card-footer">
                        <div class="d-flex justify-content-between">
                            <a asp-action="Index" class="btn btn-secondary">
                                <i class="fas fa-arrow-left me-1"></i>
                                Geri Dön
                            </a>
                            <div>
                                <button type="reset" class="btn btn-outline-secondary me-2">
                                    <i class="fas fa-undo me-1"></i>
                                    Temizle
                                </button>
                                <button type="submit" class="btn btn-primary">
                                    <i class="fas fa-save me-1"></i>
                                    Kaydet
                                </button>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<style>
    .required::after {
        content: " *";
        color: red;
    }
    
    .card-header {
        background: linear-gradient(135deg, #007bff 0%, #0056b3 100%);
        color: white;
    }

    .form-control:focus, .form-select:focus {
        border-color: #007bff;
        box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
    }

    .btn:hover {
        transform: translateY(-1px);
        transition: all 0.2s ease;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Auto-calculate break duration when break times are set
        const breakStart = document.getElementById('BreakStartTime');
        const breakEnd = document.getElementById('BreakEndTime');
        const breakDuration = document.getElementById('BreakDurationMinutes');

        function calculateBreakDuration() {
            if (breakStart.value && breakEnd.value) {
                const start = new Date('1970-01-01T' + breakStart.value + ':00');
                const end = new Date('1970-01-01T' + breakEnd.value + ':00');
                
                if (end > start) {
                    const diffMs = end - start;
                    const diffMins = Math.round(diffMs / 60000);
                    breakDuration.value = diffMins;
                }
            }
        }

        breakStart.addEventListener('change', calculateBreakDuration);
        breakEnd.addEventListener('change', calculateBreakDuration);

        // Auto-set current time for start time if empty
        const startTimeInput = document.getElementById('StartTime');
        if (!startTimeInput.value) {
            const now = new Date();
            const timeString = now.getHours().toString().padStart(2, '0') + ':' + 
                             now.getMinutes().toString().padStart(2, '0');
            startTimeInput.value = timeString;
        }

        // Auto-detect weekend
        const dateInput = document.getElementById('Date');
        const weekendCheckbox = document.getElementById('IsWeekend');
        
        function checkWeekend() {
            if (dateInput.value) {
                const selectedDate = new Date(dateInput.value);
                const dayOfWeek = selectedDate.getDay();
                weekendCheckbox.checked = (dayOfWeek === 0 || dayOfWeek === 6); // Sunday or Saturday
            }
        }

        dateInput.addEventListener('change', checkWeekend);
        
        // Check on page load
        checkWeekend();

        // Form validation
        const form = document.querySelector('.needs-validation');
        form.addEventListener('submit', function(event) {
            if (!form.checkValidity()) {
                event.preventDefault();
                event.stopPropagation();
            }
            form.classList.add('was-validated');
        });
    });
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
