@{
    ViewData["Title"] = "Ana Sayfa";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <h1 class="display-4 text-center mb-2">İnsan Kaynakları Yönetim Sistemi</h1>
            <p class="lead text-center mb-4">İKYS'ye hoş geldiniz. Bu sistem ile personel yönetimi işlemlerinizi kolayca gerçekleştirebilirsiniz.</p>
        </div>
    </div>


    <!-- İstatistik Widget'ları -->
    <div class="row mb-4">
        <div class="col-lg-3 col-md-6 mb-3">
            <div class="card bg-primary text-white h-100">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="card-title">@ViewBag.TotalEmployees</h4>
                            <p class="card-text">Toplam Personel</p>
                            <small>@ViewBag.ActiveEmployees aktif</small>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-users fa-3x opacity-75"></i>
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <a asp-controller="Person" asp-action="Index" class="text-white text-decoration-none">
                        <small>Detayları Görüntüle <i class="fas fa-arrow-right"></i></small>
                    </a>
                </div>
            </div>
        </div>

        <div class="col-lg-3 col-md-6 mb-3">
            <div class="card bg-success text-white h-100">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="card-title">@ViewBag.TotalDepartments</h4>
                            <p class="card-text">Toplam Departman</p>
                            <small>@ViewBag.ActiveDepartments aktif</small>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-building fa-3x opacity-75"></i>
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <a asp-controller="Department" asp-action="Index" class="text-white text-decoration-none">
                        <small>Detayları Görüntüle <i class="fas fa-arrow-right"></i></small>
                    </a>
                </div>
            </div>
        </div>

        <div class="col-lg-3 col-md-6 mb-3">
            <div class="card bg-warning text-white h-100">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="card-title">@ViewBag.TotalPositions</h4>
                            <p class="card-text">Toplam Pozisyon</p>
                            <small>@ViewBag.OpenPositions açık pozisyon</small>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-briefcase fa-3x opacity-75"></i>
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <a asp-controller="Position" asp-action="Index" class="text-white text-decoration-none">
                        <small>Detayları Görüntüle <i class="fas fa-arrow-right"></i></small>
                    </a>
                </div>
            </div>
        </div>

        <div class="col-lg-3 col-md-6 mb-3">
            <div class="card bg-info text-white h-100">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="card-title">@ViewBag.TotalLeaveRequests</h4>
                            <p class="card-text">İzin Talepleri</p>
                            <small>@ViewBag.PendingLeaveRequests beklemede</small>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-calendar-alt fa-3x opacity-75"></i>
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <a asp-controller="Leave" asp-action="Index" class="text-white text-decoration-none">
                        <small>Detayları Görüntüle <i class="fas fa-arrow-right"></i></small>
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Chart.js Grafikleri -->
    <div class="row mb-4">
        <div class="col-lg-6 mb-4">
            <div class="card h-100">
                <div class="card-header bg-primary text-white">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-chart-pie me-2"></i>Departman Bazında Personel Dağılımı
                    </h5>
                </div>
                <div class="card-body">
                    <div style="position: relative; height: 300px;">
                        <canvas id="departmentChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-lg-6 mb-4">
            <div class="card h-100">
                <div class="card-header bg-success text-white">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-chart-bar me-2"></i>İzin Talebi Durumları
                    </h5>
                </div>
                <div class="card-body">
                    <div style="position: relative; height: 300px;">
                        <canvas id="leaveStatusChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-lg-8 mb-4">
            <div class="card h-100">
                <div class="card-header bg-info text-white">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-chart-line me-2"></i>Son 6 Ay İşe Alım Trendi
                    </h5>
                </div>
                <div class="card-body">
                    <div style="position: relative; height: 350px;">
                        <canvas id="hiringTrendChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-lg-4 mb-4">
            <div class="card h-100">
                <div class="card-header bg-warning text-white">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-chart-doughnut me-2"></i>Stok Durumu
                    </h5>
                </div>
                <div class="card-body">
                    <div style="position: relative; height: 350px;">
                        <canvas id="stockStatusChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- İkinci sıra widget'ları -->
    <div class="row mb-4">
        <div class="col-lg-4 col-md-6 mb-3">
            <div class="card bg-danger text-white h-100">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="card-title">@ViewBag.LowStockMaterials</h4>
                            <p class="card-text">Düşük Stok</p>
                            <small>@ViewBag.TotalMaterials toplam malzeme</small>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-exclamation-triangle fa-3x opacity-75"></i>
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <a asp-controller="Material" asp-action="LowStock" class="text-white text-decoration-none">
                        <small>Düşük Stok Raporu <i class="fas fa-arrow-right"></i></small>
                    </a>
                </div>
            </div>
        </div>

        <div class="col-lg-4 col-md-6 mb-3">
            <div class="card bg-secondary text-white h-100">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="card-title">₺@string.Format("{0:N0}", ViewBag.TotalMaterialValue ?? 0)</h4>
                            <p class="card-text">Toplam Malzeme Değeri</p>
                            <small>Stok değeri</small>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-boxes fa-3x opacity-75"></i>
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <a asp-controller="Material" asp-action="StockSummary" class="text-white text-decoration-none">
                        <small>Stok Özeti <i class="fas fa-arrow-right"></i></small>
                    </a>
                </div>
            </div>
        </div>

        <div class="col-lg-4 col-md-12 mb-3">
            <div class="card bg-dark text-white h-100">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="card-title">₺@string.Format("{0:N0}", ViewBag.MonthlyPayrollTotal ?? 0)</h4>
                            <p class="card-text">Bu Ay Bordro</p>
                            <small>Ortalama: ₺@string.Format("{0:N0}", ViewBag.AverageEmployeeSalary ?? 0)</small>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-money-bill-wave fa-3x opacity-75"></i>
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <a asp-controller="Payroll" asp-action="Index" class="text-white text-decoration-none">
                        <small>Bordro Yönetimi <i class="fas fa-arrow-right"></i></small>
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Modül Kartları (Mevcut) -->
    <div class="row">
        <div class="col-md-3">
            <div class="card h-100">
                <div class="card-body text-center">
                    <i class="fas fa-users fa-3x text-primary mb-3"></i>
                    <h5 class="card-title">Personel Yönetimi</h5>
                    <p class="card-text">Personel kayıtları, kimlik bilgileri ve özlük işlemleri</p>
                    <a asp-controller="Person" asp-action="Index" class="btn btn-primary">Personel Listesi</a>
                </div>
            </div>
        </div>
        
        <div class="col-md-3">
            <div class="card h-100">
                <div class="card-body text-center">
                    <i class="fas fa-building fa-3x text-success mb-3"></i>
                    <h5 class="card-title">Departman Yönetimi</h5>
                    <p class="card-text">Organizasyon yapısı ve departman işlemleri</p>
                    <a asp-controller="Department" asp-action="Index" class="btn btn-success">Departman Listesi</a>
                </div>
            </div>
        </div>
        
        <div class="col-md-3">
            <div class="card h-100">
                <div class="card-body text-center">
                    <i class="fas fa-graduation-cap fa-3x text-warning mb-3"></i>
                    <h5 class="card-title">Eğitim Yönetimi</h5>
                    <p class="card-text">Personel eğitim bilgileri ve sertifikalar</p>
                    <a asp-controller="Education" asp-action="Index" class="btn btn-warning">Eğitim Listesi</a>
                </div>
            </div>
        </div>
        
        <div class="col-md-3">
            <div class="card h-100">
                <div class="card-body text-center">
                    <i class="fas fa-briefcase fa-3x text-info mb-3"></i>
                    <h5 class="card-title">Pozisyon Yönetimi</h5>
                    <p class="card-text">İş pozisyonları, unvanlar ve maaş aralıkları</p>
                    <a asp-controller="Position" asp-action="Index" class="btn btn-info">Pozisyon Listesi</a>
                </div>
            </div>
        </div>
    </div>
    
    <!-- WorkLog Quick Access Row -->
    <div class="row mt-4">
        <div class="col-md-4">
            <div class="card h-100 border-success">
                <div class="card-body text-center">
                    <i class="fas fa-sign-in-alt fa-3x text-success mb-3"></i>
                    <h5 class="card-title text-success">Giriş Yap</h5>
                    <p class="card-text">İş günü başlat - giriş kaydı oluştur</p>
                    <a asp-controller="WorkLog" asp-action="CheckIn" class="btn btn-success">
                        <i class="fas fa-play me-1"></i>Başlat
                    </a>
                </div>
            </div>
        </div>
        
        <div class="col-md-4">
            <div class="card h-100 border-primary">
                <div class="card-body text-center">
                    <i class="fas fa-clock fa-3x text-primary mb-3"></i>
                    <h5 class="card-title text-primary">Çalışma Takibi</h5>
                    <p class="card-text">Çalışma saatleri kayıtları ve raporlar</p>
                    <a asp-controller="WorkLog" asp-action="Index" class="btn btn-primary">
                        <i class="fas fa-list me-1"></i>Kayıtlar
                    </a>
                </div>
            </div>
        </div>
        
        <div class="col-md-4">
            <div class="card h-100 border-info">
                <div class="card-body text-center">
                    <i class="fas fa-chart-bar fa-3x text-info mb-3"></i>
                    <h5 class="card-title text-info">Zaman Raporları</h5>
                    <p class="card-text">Mesai, geç gelme ve performans raporları</p>
                    <a asp-controller="WorkLog" asp-action="TimeSheet" class="btn btn-info">
                        <i class="fas fa-table me-1"></i>Raporlar
                    </a>
                </div>
            </div>
        </div>
    </div>
    
    <div class="row mt-4">
        <div class="col-md-6 offset-md-3">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Hızlı İşlemler</h5>
                    <div class="d-grid gap-2">
                        @if (User.IsInRole("Admin"))
                        {
                            <a asp-controller="Person" asp-action="Create" class="btn btn-outline-primary mb-2">
                                <i class="fas fa-user-plus"></i> Yeni Personel Ekle
                            </a>
                        }
                        <a asp-controller="Department" asp-action="Create" class="btn btn-outline-success mb-2">
                            <i class="fas fa-plus"></i> Yeni Departman Ekle
                        </a>
                        <a asp-controller="Education" asp-action="Create" class="btn btn-outline-warning mb-2">
                            <i class="fas fa-graduation-cap"></i> Yeni Eğitim Ekle
                        </a>
                        <a asp-controller="Position" asp-action="Create" class="btn btn-outline-info mb-2">
                            <i class="fas fa-briefcase"></i> Yeni Pozisyon Ekle
                        </a>
                        <a asp-controller="WorkLog" asp-action="CheckIn" class="btn btn-outline-success">
                            <i class="fas fa-clock"></i> Giriş Yap / Çalışma Başlat
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- TMK Modülü -->
    <div class="row mt-4">
        <div class="col-md-6">
            <div class="card h-100 border-primary">
                <div class="card-body text-center">
                    <i class="fas fa-sitemap fa-3x text-primary mb-3"></i>
                    <h5 class="card-title text-primary">TMK - Organizasyon</h5>
                    <p class="card-text">Teşkilat yapısı, organizasyon şeması ve hiyerarşi</p>
                    <div class="btn-group" role="group">
                        <a asp-controller="Organization" asp-action="Index" class="btn btn-primary">Listesi</a>
                        <a asp-controller="Organization" asp-action="Tree" class="btn btn-outline-primary">Org. Şeması</a>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-md-6">
            <div class="card h-100 border-success">
                <div class="card-body text-center">
                    <i class="fas fa-boxes fa-3x text-success mb-3"></i>
                    <h5 class="card-title text-success">TMK - Malzeme</h5>
                    <p class="card-text">Malzeme yönetimi, stok takibi ve envanter</p>
                    <div class="btn-group" role="group">
                        <a asp-controller="Material" asp-action="Index" class="btn btn-success">Listesi</a>
                        <a asp-controller="Material" asp-action="LowStock" class="btn btn-outline-success">Düşük Stok</a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Son Güncelleme -->
    <div class="row mt-4">
        <div class="col-12 text-center">
            <small class="text-muted">
                Son güncelleme: @ViewBag.LastUpdated
            </small>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/js/all.min.js"></script>
    <script>
        // Global chart instances to track for proper cleanup
        let chartInstances = {};
        
        // Chart.js konfigürasyonu ve oluşturma
        function initializeCharts() {
            // Check if Chart.js is loaded
            if (typeof Chart === 'undefined') {
                console.error('Chart.js is not loaded! Charts will not be displayed.');
                // Show fallback message in chart containers
                document.querySelectorAll('[id$="Chart"]').forEach(function(container) {
                    container.innerHTML = '<div style="display: flex; align-items: center; justify-content: center; height: 100%; color: #6c757d; text-align: center;"><div><i class="fas fa-chart-bar fa-3x mb-3"></i><br>Grafik yüklenemedi<br><small>Chart.js kütüphanesi bulunamadı</small></div></div>';
                });
                return;
            }
            
            console.log('Chart.js loaded successfully, version:', Chart.version);
            
            // Destroy existing charts to prevent canvas reuse errors
            Object.keys(chartInstances).forEach(function(key) {
                if (chartInstances[key]) {
                    chartInstances[key].destroy();
                    delete chartInstances[key];
                }
            });
            
            // Chart.js defaults
            Chart.defaults.font.family = 'Segoe UI, Tahoma, Geneva, Verdana, sans-serif';
            Chart.defaults.color = '#333';
            
            // 1. Departman Pie Chart
            try {
                const departmentCtx = document.getElementById('departmentChart').getContext('2d');
                const departmentLabels = @Html.Raw(ViewBag.ChartDepartmentLabels ?? "[]");
                const departmentData = @Html.Raw(ViewBag.ChartDepartmentData ?? "[]");
                
                console.log('Department chart data:', { labels: departmentLabels, data: departmentData });
                
                // Check if we have data
                if (!departmentLabels || !departmentData || departmentLabels.length === 0 || departmentData.length === 0) {
                    document.getElementById('departmentChart').parentNode.innerHTML = '<div style="display: flex; align-items: center; justify-content: center; height: 100%; color: #6c757d; text-align: center;"><div><i class="fas fa-chart-pie fa-3x mb-3"></i><br>Veri bulunamadı<br><small>Henüz departman verisi yok</small></div></div>';
                    throw new Error('No department data available');
                }
                
                chartInstances.departmentChart = new Chart(departmentCtx, {
                type: 'pie',
                data: {
                    labels: departmentLabels,
                    datasets: [{
                        data: departmentData,
                        backgroundColor: [
                            '#007bff', '#28a745', '#ffc107', '#dc3545', 
                            '#6f42c1', '#fd7e14', '#20c997', '#6c757d'
                        ],
                        borderWidth: 2,
                        borderColor: '#fff'
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom',
                            labels: {
                                padding: 15,
                                usePointStyle: true
                            }
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                    const percentage = ((context.parsed * 100) / total).toFixed(1);
                                    return context.label + ': ' + context.parsed + ' (' + percentage + '%)';
                                }
                            }
                        }
                    }
                }
                });
            } catch (error) {
                console.error('Error creating department chart:', error);
            }
            
            // 2. İzin Durumu Bar Chart
            try {
                const leaveCtx = document.getElementById('leaveStatusChart').getContext('2d');
                const leaveLabels = @Html.Raw(ViewBag.ChartLeaveStatusLabels ?? "[]");
                const leaveData = @Html.Raw(ViewBag.ChartLeaveStatusData ?? "[]");
                
                console.log('Leave status chart data:', { labels: leaveLabels, data: leaveData });
                
                chartInstances.leaveStatusChart = new Chart(leaveCtx, {
                type: 'bar',
                data: {
                    labels: leaveLabels,
                    datasets: [{
                        label: 'İzin Talep Sayısı',
                        data: leaveData,
                        backgroundColor: ['#ffc107', '#28a745', '#dc3545', '#6c757d'],
                        borderColor: ['#e0a800', '#1e7e34', '#c82333', '#545b62'],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                stepSize: 1
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            display: false
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    return context.label + ': ' + context.parsed.y + ' talep';
                                }
                            }
                        }
                    }
                }
                });
            } catch (error) {
                console.error('Error creating leave status chart:', error);
            }
            
            // 3. İşe Alım Trendi Line Chart
            try {
                const hiringCtx = document.getElementById('hiringTrendChart').getContext('2d');
                const hiringLabels = @Html.Raw(ViewBag.ChartHiringTrendLabels ?? "[]");
                const hiringData = @Html.Raw(ViewBag.ChartHiringTrendData ?? "[]");
                
                console.log('Hiring trend chart data:', { labels: hiringLabels, data: hiringData });
                
                chartInstances.hiringTrendChart = new Chart(hiringCtx, {
                type: 'line',
                data: {
                    labels: hiringLabels,
                    datasets: [{
                        label: 'İşe Alım Sayısı',
                        data: hiringData,
                        borderColor: '#007bff',
                        backgroundColor: 'rgba(0, 123, 255, 0.1)',
                        borderWidth: 3,
                        fill: true,
                        tension: 0.4,
                        pointBackgroundColor: '#007bff',
                        pointBorderColor: '#fff',
                        pointBorderWidth: 2,
                        pointRadius: 6
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                stepSize: 1
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            display: false
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    return 'İşe Alım: ' + context.parsed.y + ' kişi';
                                }
                            }
                        }
                    }
                }
                });
            } catch (error) {
                console.error('Error creating hiring trend chart:', error);
            }
            
            // 4. Stok Durumu Doughnut Chart
            try {
                const stockCtx = document.getElementById('stockStatusChart').getContext('2d');
                const stockLabels = @Html.Raw(ViewBag.ChartStockStatusLabels ?? "[]");
                const stockData = @Html.Raw(ViewBag.ChartStockStatusData ?? "[]");
                
                console.log('Stock status chart data:', { labels: stockLabels, data: stockData });
                
                chartInstances.stockStatusChart = new Chart(stockCtx, {
                type: 'doughnut',
                data: {
                    labels: stockLabels,
                    datasets: [{
                        data: stockData,
                        backgroundColor: ['#28a745', '#dc3545', '#ffc107', '#6c757d'],
                        borderWidth: 2,
                        borderColor: '#fff'
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    cutout: '60%',
                    plugins: {
                        legend: {
                            position: 'bottom',
                            labels: {
                                padding: 15,
                                usePointStyle: true
                            }
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                    const percentage = ((context.parsed * 100) / total).toFixed(1);
                                    return context.label + ': ' + context.parsed + ' (' + percentage + '%)';
                                }
                            }
                        }
                    }
                }
                });
            } catch (error) {
                console.error('Error creating stock status chart:', error);
            }
        }
        
        // Initialize charts when DOM is ready - single initialization
        let chartsInitialized = false;
        
        function safeInitializeCharts() {
            if (chartsInitialized) {
                console.log('Charts already initialized, skipping...');
                return;
            }
            
            if (typeof Chart !== 'undefined') {
                console.log('Initializing charts...');
                initializeCharts();
                chartsInitialized = true;
            } else {
                console.warn('Chart.js not loaded yet, showing fallback...');
                showStaticFallback();
            }
        }
        
        // Initialize charts when DOM is ready
        $(document).ready(function() {
            setTimeout(safeInitializeCharts, 500);
        });
        
        // Fallback initialization
        document.addEventListener('DOMContentLoaded', function() {
            setTimeout(function() {
                if (!chartsInitialized) {
                    safeInitializeCharts();
                }
            }, 1000);
        });
        
        // Static fallback function
        function showStaticFallback() {
            if (typeof Chart === 'undefined') {
                console.log('Showing static fallback for charts');
                
                // Get chart data from ViewBag
                const departmentLabels = @Html.Raw(ViewBag.ChartDepartmentLabels ?? "[]");
                const departmentData = @Html.Raw(ViewBag.ChartDepartmentData ?? "[]");
                
                // Create simple text-based chart for department data
                const departmentChart = document.getElementById('departmentChart');
                if (departmentChart && departmentLabels.length > 0) {
                    let html = '<div style="padding: 20px; text-align: center;"><h6 style="margin-bottom: 15px; color: #495057;">Departman Dağılımı</h6>';
                    for (let i = 0; i < departmentLabels.length; i++) {
                        const percentage = departmentData.length > 0 ? Math.round((departmentData[i] / departmentData.reduce((a,b) => a+b, 0)) * 100) : 0;
                        html += '<div style="margin: 8px 0; padding: 8px; background: #f8f9fa; border-radius: 4px; display: flex; justify-content: space-between;">';
                        html += '<span style="font-weight: 500;">' + departmentLabels[i] + '</span>';
                        html += '<span style="color: #007bff; font-weight: bold;">' + departmentData[i] + ' (' + percentage + '%)</span>';
                        html += '</div>';
                    }
                    html += '</div>';
                    departmentChart.parentNode.innerHTML = html;
                }
                
                // Enhanced fallback for other charts with data
                // Leave Status Chart
                const leaveLabels = @Html.Raw(ViewBag.ChartLeaveStatusLabels ?? "[]");
                const leaveData = @Html.Raw(ViewBag.ChartLeaveStatusData ?? "[]");
                const leaveChart = document.getElementById('leaveStatusChart');
                if (leaveChart && leaveLabels.length > 0) {
                    let html = '<div style="padding: 20px; text-align: center;"><h6 style="margin-bottom: 15px; color: #495057;">İzin Durumları</h6>';
                    for (let i = 0; i < leaveLabels.length; i++) {
                        html += '<div style="margin: 8px 0; padding: 8px; background: #f8f9fa; border-radius: 4px; display: flex; justify-content: space-between;">';
                        html += '<span style="font-weight: 500;">' + leaveLabels[i] + '</span>';
                        html += '<span style="color: #28a745; font-weight: bold;">' + leaveData[i] + ' talep</span>';
                        html += '</div>';
                    }
                    html += '</div>';
                    leaveChart.parentNode.innerHTML = html;
                } else if (leaveChart) {
                    leaveChart.parentNode.innerHTML = '<div style="display: flex; align-items: center; justify-content: center; height: 100%; color: #6c757d; text-align: center;"><div><i class="fas fa-chart-bar fa-3x mb-3"></i><br>İzin verisi bulunamadı<br><small>Henüz izin talebi yok</small></div></div>';
                }
                
                // Hiring Trend Chart
                const hiringLabels = @Html.Raw(ViewBag.ChartHiringTrendLabels ?? "[]");
                const hiringData = @Html.Raw(ViewBag.ChartHiringTrendData ?? "[]");
                const hiringChart = document.getElementById('hiringTrendChart');
                if (hiringChart && hiringLabels.length > 0) {
                    let html = '<div style="padding: 20px; text-align: center;"><h6 style="margin-bottom: 15px; color: #495057;">İşe Alım Trendi</h6>';
                    for (let i = 0; i < hiringLabels.length; i++) {
                        html += '<div style="margin: 8px 0; padding: 8px; background: #f8f9fa; border-radius: 4px; display: flex; justify-content: space-between;">';
                        html += '<span style="font-weight: 500;">' + hiringLabels[i] + '</span>';
                        html += '<span style="color: #17a2b8; font-weight: bold;">' + hiringData[i] + ' kişi</span>';
                        html += '</div>';
                    }
                    html += '</div>';
                    hiringChart.parentNode.innerHTML = html;
                } else if (hiringChart) {
                    hiringChart.parentNode.innerHTML = '<div style="display: flex; align-items: center; justify-content: center; height: 100%; color: #6c757d; text-align: center;"><div><i class="fas fa-chart-line fa-3x mb-3"></i><br>İşe alım verisi bulunamadı<br><small>Veri hazırlanıyor</small></div></div>';
                }
                
                // Stock Status Chart
                const stockLabels = @Html.Raw(ViewBag.ChartStockStatusLabels ?? "[]");
                const stockData = @Html.Raw(ViewBag.ChartStockStatusData ?? "[]");
                const stockChart = document.getElementById('stockStatusChart');
                if (stockChart && stockLabels.length > 0) {
                    let html = '<div style="padding: 20px; text-align: center;"><h6 style="margin-bottom: 15px; color: #495057;">Stok Durumu</h6>';
                    for (let i = 0; i < stockLabels.length; i++) {
                        const color = stockLabels[i].includes('Düşük') ? '#dc3545' : (stockLabels[i].includes('Fazla') ? '#ffc107' : '#28a745');
                        html += '<div style="margin: 8px 0; padding: 8px; background: #f8f9fa; border-radius: 4px; display: flex; justify-content: space-between;">';
                        html += '<span style="font-weight: 500;">' + stockLabels[i] + '</span>';
                        html += '<span style="color: ' + color + '; font-weight: bold;">' + stockData[i] + ' ürün</span>';
                        html += '</div>';
                    }
                    html += '</div>';
                    stockChart.parentNode.innerHTML = html;
                } else if (stockChart) {
                    stockChart.parentNode.innerHTML = '<div style="display: flex; align-items: center; justify-content: center; height: 100%; color: #6c757d; text-align: center;"><div><i class="fas fa-chart-doughnut fa-3x mb-3"></i><br>Stok verisi bulunamadı<br><small>Malzeme servisi kontrol ediliyor</small></div></div>';
                }
            }
        }
    </script>
    <style>
        .opacity-75 {
            opacity: 0.75;
        }
        .card-footer a:hover {
            text-decoration: underline !important;
        }
        .card {
            transition: transform 0.2s ease-in-out;
        }
        .card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }
        
        /* Chart container styles */
        .card-header {
            border-bottom: 1px solid rgba(255,255,255,0.2);
        }
        .card-header h5 {
            font-weight: 600;
        }
        canvas {
            max-height: 100% !important;
        }
    </style>
}
