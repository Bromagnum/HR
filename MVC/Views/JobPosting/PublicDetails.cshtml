@model PublicJobPostingDetailViewModel
@{
    ViewData["Title"] = $"{Model.Title} - {Model.CompanyName}";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <!-- Hero Section -->
    <div class="row">
        <div class="col-12">
            <div class="card bg-gradient-primary text-white mb-4">
                <div class="card-body py-5">
                    <div class="row align-items-center">
                        <div class="col-md-8">
                            <h1 class="display-5 fw-bold mb-3">@Model.Title</h1>
                            <p class="lead mb-3">
                                <i class="fas fa-building me-2"></i>@Model.CompanyName
                                <span class="ms-3"><i class="fas fa-layer-group me-2"></i>@Model.DepartmentName</span>
                            </p>
                            <div class="d-flex flex-wrap gap-2">
                                <span class="badge bg-light text-dark">
                                    <i class="fas fa-clock me-1"></i>@Model.EmploymentTypeName
                                </span>
                                @if (!string.IsNullOrEmpty(Model.Location))
                                {
                                    <span class="badge bg-light text-dark">
                                        <i class="fas fa-map-marker-alt me-1"></i>@Model.Location
                                    </span>
                                }
                                @if (Model.IsRemoteWork)
                                {
                                    <span class="badge bg-success">
                                        <i class="fas fa-home me-1"></i>Uzaktan Çalışma
                                    </span>
                                }
                                @if (Model.IsNew)
                                {
                                    <span class="badge bg-warning text-dark">
                                        <i class="fas fa-star me-1"></i>Yeni
                                    </span>
                                }
                                @if (Model.IsUrgent)
                                {
                                    <span class="badge bg-danger">
                                        <i class="fas fa-exclamation me-1"></i>Acil
                                    </span>
                                }
                            </div>
                        </div>
                        <div class="col-md-4 text-md-end">
                            @if (Model.CanApply)
                            {
                                <a asp-action="Apply" asp-route-id="@Model.Id" class="btn btn-success btn-lg">
                                    <i class="fas fa-paper-plane me-2"></i>Başvur
                                </a>
                            }
                            else
                            {
                                <div class="alert alert-warning" role="alert">
                                    <i class="fas fa-exclamation-triangle me-2"></i>
                                    @Model.CannotApplyReason
                                </div>
                            }
                            <div class="mt-3">
                                <small class="text-light">
                                    <i class="fas fa-eye me-1"></i>@Model.ViewCount görüntülenme
                                </small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Ana İçerik -->
        <div class="col-lg-8">
            <!-- İş Tanımı -->
            <div class="card mb-4">
                <div class="card-header">
                    <h4><i class="fas fa-file-alt text-primary me-2"></i>İş Tanımı</h4>
                </div>
                <div class="card-body">
                    <div class="job-description">
                        @Html.Raw(Model.Description.Replace("\n", "<br />"))
                    </div>
                </div>
            </div>

            <!-- Aranan Nitelikler -->
            @if (!string.IsNullOrEmpty(Model.Requirements))
            {
                <div class="card mb-4">
                    <div class="card-header">
                        <h4><i class="fas fa-clipboard-list text-info me-2"></i>Aranan Nitelikler</h4>
                    </div>
                    <div class="card-body">
                        <div class="requirements">
                            @Html.Raw(Model.Requirements.Replace("\n", "<br />"))
                        </div>
                    </div>
                </div>
            }

            <!-- Sorumluluklar -->
            @if (!string.IsNullOrEmpty(Model.Responsibilities))
            {
                <div class="card mb-4">
                    <div class="card-header">
                        <h4><i class="fas fa-tasks text-success me-2"></i>İş Sorumlulukları</h4>
                    </div>
                    <div class="card-body">
                        <div class="responsibilities">
                            @Html.Raw(Model.Responsibilities.Replace("\n", "<br />"))
                        </div>
                    </div>
                </div>
            }

            <!-- Yan Haklar -->
            @if (!string.IsNullOrEmpty(Model.Benefits))
            {
                <div class="card mb-4">
                    <div class="card-header">
                        <h4><i class="fas fa-gift text-warning me-2"></i>Sağlanan Yan Haklar</h4>
                    </div>
                    <div class="card-body">
                        <div class="benefits">
                            @Html.Raw(Model.Benefits.Replace("\n", "<br />"))
                        </div>
                    </div>
                </div>
            }

            <!-- Şirket Hakkında -->
            @if (!string.IsNullOrEmpty(Model.CompanyDescription))
            {
                <div class="card mb-4">
                    <div class="card-header">
                        <h4><i class="fas fa-building text-secondary me-2"></i>@Model.CompanyName Hakkında</h4>
                    </div>
                    <div class="card-body">
                        <div class="company-description">
                            @Html.Raw(Model.CompanyDescription.Replace("\n", "<br />"))
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Yan Panel -->
        <div class="col-lg-4">
            <!-- Özet Bilgiler -->
            <div class="card mb-4 position-sticky" style="top: 20px;">
                <div class="card-header">
                    <h5><i class="fas fa-info-circle me-2"></i>Pozisyon Özeti</h5>
                </div>
                <div class="card-body">
                    <div class="job-summary">
                        <div class="summary-item mb-3">
                            <div class="d-flex justify-content-between">
                                <span class="text-muted">Pozisyon:</span>
                                <strong>@Model.PositionName</strong>
                            </div>
                        </div>
                        
                        <div class="summary-item mb-3">
                            <div class="d-flex justify-content-between">
                                <span class="text-muted">Departman:</span>
                                <strong>@Model.DepartmentName</strong>
                            </div>
                        </div>

                        <div class="summary-item mb-3">
                            <div class="d-flex justify-content-between">
                                <span class="text-muted">Çalışma Şekli:</span>
                                <strong>@Model.EmploymentTypeName</strong>
                            </div>
                        </div>

                        @if (!string.IsNullOrEmpty(Model.Location))
                        {
                            <div class="summary-item mb-3">
                                <div class="d-flex justify-content-between">
                                    <span class="text-muted">Lokasyon:</span>
                                    <strong>@Model.Location</strong>
                                </div>
                            </div>
                        }

                        @if (!string.IsNullOrEmpty(Model.ExperienceRange))
                        {
                            <div class="summary-item mb-3">
                                <div class="d-flex justify-content-between">
                                    <span class="text-muted">Deneyim:</span>
                                    <strong>@Model.ExperienceRange</strong>
                                </div>
                            </div>
                        }

                        @if (!string.IsNullOrEmpty(Model.MinEducationName))
                        {
                            <div class="summary-item mb-3">
                                <div class="d-flex justify-content-between">
                                    <span class="text-muted">Min. Eğitim:</span>
                                    <strong>@Model.MinEducationName</strong>
                                </div>
                            </div>
                        }

                        @if (!string.IsNullOrEmpty(Model.SalaryRange))
                        {
                            <div class="summary-item mb-3">
                                <div class="d-flex justify-content-between">
                                    <span class="text-muted">Maaş:</span>
                                    <strong>@Model.SalaryRange</strong>
                                </div>
                            </div>
                        }

                        <div class="summary-item mb-3">
                            <div class="d-flex justify-content-between">
                                <span class="text-muted">Açık Pozisyon:</span>
                                <strong>@Model.OpenPositions</strong>
                            </div>
                        </div>

                        <div class="summary-item mb-3">
                            <div class="d-flex justify-content-between">
                                <span class="text-muted">Yayın Tarihi:</span>
                                <strong>@Model.PublishDate.ToString("dd.MM.yyyy")</strong>
                            </div>
                        </div>

                        @if (Model.LastApplicationDate.HasValue)
                        {
                            <div class="summary-item mb-3">
                                <div class="d-flex justify-content-between">
                                    <span class="text-muted">Son Başvuru:</span>
                                    <strong class="@(Model.DaysRemaining <= 7 ? "text-danger" : "text-success")">
                                        @Model.LastApplicationDate.Value.ToString("dd.MM.yyyy")
                                    </strong>
                                </div>
                            </div>
                            
                            @if (Model.DaysRemaining > 0)
                            {
                                <div class="summary-item mb-3">
                                    <div class="d-flex justify-content-between">
                                        <span class="text-muted">Kalan Süre:</span>
                                        <strong class="@(Model.DaysRemaining <= 7 ? "text-danger" : "text-success")">
                                            @Model.DaysRemaining gün
                                        </strong>
                                    </div>
                                </div>
                            }
                        }
                    </div>

                    @if (Model.CanApply)
                    {
                        <div class="d-grid mt-4">
                            <a asp-action="Apply" asp-route-id="@Model.Id" class="btn btn-primary btn-lg">
                                <i class="fas fa-paper-plane me-2"></i>Şimdi Başvur
                            </a>
                        </div>
                    }
                </div>
            </div>

            <!-- Etiketler -->
            @if (Model.TagList.Any())
            {
                <div class="card mb-4">
                    <div class="card-header">
                        <h5><i class="fas fa-tags me-2"></i>Etiketler</h5>
                    </div>
                    <div class="card-body">
                        @foreach (var tag in Model.TagList)
                        {
                            <span class="badge bg-light text-dark me-1 mb-1">#@tag</span>
                        }
                    </div>
                </div>
            }

            <!-- İletişim -->
            @if (!string.IsNullOrEmpty(Model.ContactInfo))
            {
                <div class="card mb-4">
                    <div class="card-header">
                        <h5><i class="fas fa-address-card me-2"></i>İletişim</h5>
                    </div>
                    <div class="card-body">
                        <div class="contact-info">
                            @Html.Raw(Model.ContactInfo.Replace("\n", "<br />"))
                        </div>
                    </div>
                </div>
            }

            <!-- Paylaşım -->
            <div class="card">
                <div class="card-header">
                    <h5><i class="fas fa-share-alt me-2"></i>Paylaş</h5>
                </div>
                <div class="card-body">
                    <div class="d-grid gap-2">
                        <button type="button" class="btn btn-outline-primary btn-sm" onclick="shareJob('linkedin')">
                            <i class="fab fa-linkedin me-2"></i>LinkedIn'de Paylaş
                        </button>
                        <button type="button" class="btn btn-outline-info btn-sm" onclick="shareJob('twitter')">
                            <i class="fab fa-twitter me-2"></i>Twitter'da Paylaş
                        </button>
                        <button type="button" class="btn btn-outline-secondary btn-sm" onclick="copyJobLink()">
                            <i class="fas fa-link me-2"></i>Linki Kopyala
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Benzer İlanlar -->
    @if (Model.RelatedPostings.Any())
    {
        <div class="row mt-5">
            <div class="col-12">
                <h3 class="mb-4"><i class="fas fa-lightbulb text-warning me-2"></i>Sizin İçin Benzer İlanlar</h3>
                <div class="row">
                    @foreach (var related in Model.RelatedPostings)
                    {
                        <div class="col-md-6 col-lg-4 mb-4">
                            <div class="card h-100 job-card">
                                <div class="card-body">
                                    <h5 class="card-title text-primary">@related.Title</h5>
                                    <p class="text-muted mb-2">
                                        <i class="fas fa-building me-1"></i>@related.DepartmentName
                                    </p>
                                    <p class="text-muted mb-2">
                                        <i class="fas fa-clock me-1"></i>@related.EmploymentTypeName
                                    </p>
                                    @if (!string.IsNullOrEmpty(related.Location))
                                    {
                                        <p class="text-muted mb-2">
                                            <i class="fas fa-map-marker-alt me-1"></i>@related.Location
                                        </p>
                                    }
                                    @if (!string.IsNullOrEmpty(related.SalaryRange))
                                    {
                                        <p class="text-muted mb-3">
                                            <i class="fas fa-money-bill-wave me-1"></i>@related.SalaryRange
                                        </p>
                                    }
                                </div>
                                <div class="card-footer bg-transparent">
                                    <a asp-action="PublicDetails" asp-route-id="@related.Id" class="btn btn-outline-primary btn-sm">
                                        <i class="fas fa-eye me-1"></i>İncele
                                    </a>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    }
</div>

@section Styles {
    <style>
        .bg-gradient-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        }
        
        .job-description, .requirements, .responsibilities, .benefits, .company-description, .contact-info {
            line-height: 1.7;
            font-size: 1.1rem;
        }
        
        .summary-item {
            padding: 8px 0;
            border-bottom: 1px solid #eee;
        }
        
        .summary-item:last-child {
            border-bottom: none;
        }
        
        .job-card {
            transition: transform 0.2s, box-shadow 0.2s;
            border: 1px solid #e9ecef;
        }
        
        .job-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.1);
        }
        
        .badge {
            font-size: 0.85rem;
            padding: 0.5em 0.8em;
        }
        
        .card-header h4, .card-header h5 {
            margin-bottom: 0;
        }
        
        @@media (max-width: 768px) {
            .position-sticky {
                position: static !important;
            }
        }
    </style>
}

@section Scripts {
    <script>
        function shareJob(platform) {
            const url = encodeURIComponent(window.location.href);
            const title = encodeURIComponent('@Model.Title - @Model.CompanyName');
            
            let shareUrl = '';
            
            switch(platform) {
                case 'linkedin':
                    shareUrl = `https://www.linkedin.com/sharing/share-offsite/?url=${url}`;
                    break;
                case 'twitter':
                    shareUrl = `https://twitter.com/intent/tweet?url=${url}&text=${title}`;
                    break;
            }
            
            if (shareUrl) {
                window.open(shareUrl, '_blank', 'width=600,height=400');
            }
        }
        
        function copyJobLink() {
            navigator.clipboard.writeText(window.location.href).then(function() {
                // You could add a toast notification here
                alert('Link panoya kopyalandı!');
            }, function(err) {
                console.error('Link kopyalanamadı: ', err);
            });
        }
        
        // Scroll spy for better UX
        window.addEventListener('scroll', function() {
            const sidebar = document.querySelector('.position-sticky');
            if (sidebar && window.innerWidth > 768) {
                const scrollTop = window.pageYOffset;
                const maxScroll = document.body.scrollHeight - window.innerHeight - 100;
                
                if (scrollTop > maxScroll) {
                    sidebar.style.position = 'absolute';
                    sidebar.style.bottom = '20px';
                    sidebar.style.top = 'auto';
                } else {
                    sidebar.style.position = 'sticky';
                    sidebar.style.top = '20px';
                    sidebar.style.bottom = 'auto';
                }
            }
        });
    </script>
}
