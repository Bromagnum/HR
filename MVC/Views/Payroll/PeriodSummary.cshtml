@model PayrollSummaryViewModel

@{
    ViewData["Title"] = "Dönem Bordro Özeti";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>
            <i class="fas fa-chart-bar text-primary"></i>
            Dönem Bordro Özeti
        </h2>
        <div>
            <a asp-action="Index" class="btn btn-secondary">
                <i class="fas fa-arrow-left"></i> Bordro Listesi
            </a>
            @if (User.IsInRole("Admin"))
            {
                <button type="button" class="btn btn-success" onclick="exportToExcel()">
                    <i class="fas fa-file-excel"></i> Excel'e Aktar
                </button>
            }
        </div>
    </div>

    <!-- Filter Section -->
    <div class="card mb-4">
        <div class="card-header">
            <h5 class="mb-0">
                <i class="fas fa-filter"></i> Dönem Seçimi
            </h5>
        </div>
        <div class="card-body">
            <form method="get" asp-action="PeriodSummary">
                <div class="row">
                    <div class="col-md-3">
                        <label class="form-label">Yıl</label>
                        <select name="Year" class="form-select" required>
                            <option value="">Yıl Seçiniz</option>
                            @for (int year = DateTime.Now.Year; year >= DateTime.Now.Year - 5; year--)
                            {
                                <option value="@year" selected="@(ViewBag.SelectedYear != null && ViewBag.SelectedYear.ToString() == year.ToString())">@year</option>
                            }
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">Ay</label>
                        <select name="Month" class="form-select" required>
                            <option value="">Ay Seçiniz</option>
                            @for (int month = 1; month <= 12; month++)
                            {
                                <option value="@month" selected="@(ViewBag.SelectedMonth != null && ViewBag.SelectedMonth.ToString() == month.ToString())">@DateTime.Parse($"2024-{month:00}-01").ToString("MMMM", new System.Globalization.CultureInfo("tr-TR"))</option>
                            }
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">Departman</label>
                        <select name="DepartmentId" class="form-select">
                            <option value="">Tüm Departmanlar</option>
                            @if (ViewBag.DepartmentSelectList != null)
                            {
                                @foreach (var item in ViewBag.DepartmentSelectList as List<Microsoft.AspNetCore.Mvc.Rendering.SelectListItem>)
                                {
                                    <option value="@item.Value" selected="@item.Selected">@item.Text</option>
                                }
                            }
                        </select>
                    </div>
                    <div class="col-md-3 d-flex align-items-end">
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-search"></i> Özet Görüntüle
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    @if (Model != null)
    {
        <!-- Summary Cards -->
        <div class="row mb-4">
            <div class="col-md-3">
                <div class="card bg-primary text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h6 class="card-title">Toplam Çalışan</h6>
                                <h3 class="mb-0">@Model.TotalEmployees</h3>
                            </div>
                            <div class="align-self-center">
                                <i class="fas fa-users fa-2x"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card bg-success text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h6 class="card-title">Toplam Brüt Maaş</h6>
                                <h3 class="mb-0">@Model.TotalGrossSalary.ToString("C0")</h3>
                            </div>
                            <div class="align-self-center">
                                <i class="fas fa-money-bill-wave fa-2x"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card bg-warning text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h6 class="card-title">Toplam Kesinti</h6>
                                <h3 class="mb-0">@Model.TotalDeductions.ToString("C0")</h3>
                            </div>
                            <div class="align-self-center">
                                <i class="fas fa-minus-circle fa-2x"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card bg-info text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h6 class="card-title">Toplam Net Maaş</h6>
                                <h3 class="mb-0">@Model.TotalNetSalary.ToString("C0")</h3>
                            </div>
                            <div class="align-self-center">
                                <i class="fas fa-hand-holding-usd fa-2x"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Department Summary -->
        @if (Model.DepartmentSummary?.Any() == true)
        {
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-building"></i> Departman Bazlı Özet
                    </h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead class="table-dark">
                                <tr>
                                    <th>Departman</th>
                                    <th>Çalışan Sayısı</th>
                                    <th>Ortalama Maaş</th>
                                    <th>Toplam Brüt</th>
                                    <th>Toplam Kesinti</th>
                                    <th>Toplam Net</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var dept in Model.DepartmentSummary)
                                {
                                    <tr>
                                        <td><strong>@dept.DepartmentName</strong></td>
                                        <td>
                                            <span class="badge bg-primary">@dept.EmployeeCount</span>
                                        </td>
                                        <td>@dept.AverageSalary.ToString("C2")</td>
                                        <td><strong>@dept.TotalGrossSalary.ToString("C2")</strong></td>
                                        <td class="text-warning"><strong>@dept.TotalDeductions.ToString("C2")</strong></td>
                                        <td class="text-success"><strong>@dept.TotalNetSalary.ToString("C2")</strong></td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <div class="alert alert-info text-center">
            <i class="fas fa-info-circle fa-2x mb-3"></i>
            <h5>Dönem seçiniz</h5>
            <p>Bordro özetini görüntülemek için yukarıdan yıl ve ay seçiniz.</p>
        </div>
    }
</div>

@section Scripts {
    <script>
        function exportToExcel() {
            const year = document.querySelector('select[name="Year"]').value;
            const month = document.querySelector('select[name="Month"]').value;
            const departmentId = document.querySelector('select[name="DepartmentId"]').value;
            
            if (!year || !month) {
                alert('Lütfen yıl ve ay seçiniz.');
                return;
            }

            const form = document.createElement('form');
            form.method = 'POST';
            form.action = '@Url.Action("ExportPeriodSummary")';
            
            const yearInput = document.createElement('input');
            yearInput.type = 'hidden';
            yearInput.name = 'Year';
            yearInput.value = year;
            form.appendChild(yearInput);
            
            const monthInput = document.createElement('input');
            monthInput.type = 'hidden';
            monthInput.name = 'Month';
            monthInput.value = month;
            form.appendChild(monthInput);
            
            if (departmentId) {
                const deptInput = document.createElement('input');
                deptInput.type = 'hidden';
                deptInput.name = 'DepartmentId';
                deptInput.value = departmentId;
                form.appendChild(deptInput);
            }
            
            const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
            const tokenInput = document.createElement('input');
            tokenInput.type = 'hidden';
            tokenInput.name = '__RequestVerificationToken';
            tokenInput.value = token;
            form.appendChild(tokenInput);
            
            document.body.appendChild(form);
            form.submit();
            document.body.removeChild(form);
        }
    </script>
}
